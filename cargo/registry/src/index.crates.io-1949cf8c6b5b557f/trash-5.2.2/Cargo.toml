# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
name = "trash"
version = "5.2.2"
authors = ["Artur Kovacs <kovacs.artur.barnabas@gmail.com>"]
build = false
include = [
    "src/**/*",
    "LICENSE.txt",
    "README.md",
    "CHANGELOG.md",
    "build.rs",
]
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "A library for moving files and folders to the Recycle Bin"
readme = "README.md"
keywords = [
    "remove",
    "trash",
    "rubbish",
    "recycle",
    "bin",
]
license = "MIT"
repository = "https://github.com/ArturKovacs/trash"

[package.metadata.cross.target.x86_64-unknown-netbsd]
pre-build = [
    "mkdir -p /tmp/netbsd",
    "curl https://cdn.netbsd.org/pub/NetBSD/NetBSD-9.2/amd64/binary/sets/base.tar.xz -O",
    "tar -C /tmp/netbsd -xJf base.tar.xz",
    "cp /tmp/netbsd/usr/lib/libexecinfo.so /usr/local/x86_64-unknown-netbsd/lib",
    "rm base.tar.xz",
    "rm -rf /tmp/netbsd",
]

[features]
coinit_apartmentthreaded = []
coinit_disable_ole1dde = []
coinit_multithreaded = []
coinit_speed_over_memory = []
default = [
    "coinit_apartmentthreaded",
    "chrono",
]

[lib]
name = "trash"
path = "src/lib.rs"

[dependencies.log]
version = "0.4"

[dev-dependencies.chrono]
version = "0.4.31"
features = ["clock"]
default-features = false

[dev-dependencies.defer]
version = "0.2.1"

[dev-dependencies.env_logger]
version = "0.10.0"

[dev-dependencies.once_cell]
version = "1.18.0"

[dev-dependencies.rand]
version = "0.8.5"

[dev-dependencies.serial_test]
version = "2.0.0"
default-features = false

[dev-dependencies.tempfile]
version = "3.8.0"

[target.'cfg(all(unix, not(target_os = "macos"), not(target_os = "ios"), not(target_os = "android")))'.dependencies.chrono]
version = "0.4.31"
features = ["clock"]
optional = true
default-features = false

[target.'cfg(all(unix, not(target_os = "macos"), not(target_os = "ios"), not(target_os = "android")))'.dependencies.libc]
version = "0.2.149"

[target.'cfg(all(unix, not(target_os = "macos"), not(target_os = "ios"), not(target_os = "android")))'.dependencies.once_cell]
version = "1.18.0"

[target.'cfg(all(unix, not(target_os = "macos"), not(target_os = "ios"), not(target_os = "android")))'.dependencies.scopeguard]
version = "1.2.0"

[target.'cfg(all(unix, not(target_os = "macos"), not(target_os = "ios"), not(target_os = "android")))'.dependencies.urlencoding]
version = "2.1.3"

[target.'cfg(any(target_os = "dragonfly", target_os = "freebsd", target_os = "netbsd", target_os = "openbsd"))'.dependencies.once_cell]
version = "1.7.2"

[target.'cfg(target_os = "macos")'.dependencies.objc2]
version = "0.5.1"

[target.'cfg(target_os = "macos")'.dependencies.objc2-foundation]
version = "0.2.0"
features = [
    "std",
    "NSError",
    "NSFileManager",
    "NSString",
    "NSURL",
]
default-features = false

[target.'cfg(target_os = "macos")'.dependencies.percent-encoding]
version = "2.3.1"

[target."cfg(windows)".dependencies.scopeguard]
version = "1.2.0"

[target."cfg(windows)".dependencies.windows]
version = "0.56.0"
features = [
    "Win32_Foundation",
    "Win32_Storage_EnhancedStorage",
    "Win32_System_Com_StructuredStorage",
    "Win32_System_SystemServices",
    "Win32_UI_Shell_PropertiesSystem",
]
